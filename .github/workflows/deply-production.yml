name: cheftory-ai-voice-command-server production CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker image
        run: |
          docker build -f ./docker/Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/cheftory-ai-voice-command-server:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cheftory-ai-voice-command-server:latest

  deploy:
    environment: production
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH to EC2 and create folder
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p cheftory-ai-voice-command-server
            mkdir -p cheftory-ai-voice-command-server/docker

      - name: Copy docker-compose.prod.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: "/home/ubuntu/cheftory-ai-voice-command-server/"
          strip_components: 0

      - name: Create .env on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat <<EOF > /home/ubuntu/cheftory-ai-voice-command-server/.env
            APP_ENV=dev
            AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}
            AZURE_OPENAI_API_VERSION=${{ secrets.AZURE_OPENAI_API_VERSION }}
            AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}
            RTZR_CLIENT_ID=${{ secrets.RTZR_CLIENT_ID }}
            RTZR_CLIENT_SECRET=${{ secrets.RTZR_CLIENT_SECRET }}
            CLOVA_ACCESS_TOKEN=${{ secrets.CLOVA_ACCESS_TOKEN }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            AUTH_API_BASE=${{ secrets.AUTH_API_BASE }}
            VOICE_COMMAND_API_BASE=${{ secrets.VOICE_COMMAND_API_BASE }}
            RECIPE_API_BASE=${{ secrets.RECIPE_API_BASE }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
            AWS_FILE_NAME=${{ secrets.AWS_FILE_NAME }}
            EOF

      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v1
        timeout-minutes: 30
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd cheftory-ai-voice-command-server/docker
            
            # Docker Hub에 로그인
            echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | sudo docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            
            # 현재 docker-compose.yml 확인
            echo "=== Before modification ==="
            cat docker-compose.yml
            
            # docker-compose.yml에서 이미지 이름 수정
            sed -i "s|image: cheftory-ai-voice-command-server:latest|image: ${{ secrets.DOCKER_HUB_USERNAME }}/cheftory-ai-voice-command-server:latest|g" docker-compose.yml
            
            # 수정된 내용 확인
            echo "=== After modification ==="
            cat docker-compose.yml
            
            # 기존 컨테이너 정리
            sudo docker-compose stop || true
            sudo docker-compose rm -f || true
            sudo docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/cheftory-ai-voice-command-server:latest || true
            
            # 새 이미지 pull 및 실행
            sudo docker-compose pull
            sudo docker-compose up -d
            
            # 컨테이너 상태 확인
            sudo docker-compose ps